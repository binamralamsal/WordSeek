/**
 * This file was generated by kysely-codegen.
 * Please do not edit it manually.
 */

import type { ColumnType } from "kysely";

export type Generated<T> = T extends ColumnType<infer S, infer I, infer U>
  ? ColumnType<S, I | undefined, U>
  : ColumnType<T, T | undefined, T>;

export type Timestamp = ColumnType<Date, Date | string, Date | string>;

export interface BannedUser {
  createdAt: Generated<Timestamp>;
  updatedAt: Generated<Timestamp>;
  userId: string;
}

export interface Game {
  activeChat: string;
  createdAt: Generated<Timestamp>;
  id: Generated<number>;
  updatedAt: Generated<Timestamp>;
  word: string;
}

export interface Guess {
  chatId: string;
  createdAt: Generated<Timestamp>;
  gameId: number;
  guess: string;
  id: Generated<number>;
  updatedAt: Generated<Timestamp>;
}

export interface Leaderboard {
  chatId: string;
  createdAt: Generated<Timestamp>;
  id: Generated<number>;
  score: number;
  updatedAt: Generated<Timestamp>;
  userId: string;
}

export interface User {
  createdAt: Generated<Timestamp>;
  id: string;
  name: string;
  updatedAt: Generated<Timestamp>;
  username: string | null;
}

export interface DB {
  bannedUsers: BannedUser;
  games: Game;
  guesses: Guess;
  leaderboard: Leaderboard;
  users: User;
}
